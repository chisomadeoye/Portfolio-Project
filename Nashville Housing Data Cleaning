Cleaning Data in SQL Queries

select *
from SQLPortfolio.dbo.NashvilleHousing




--------------------------------------------------------------------------------------------------------------------------

-- Standardize Date Format

select SaleDate, Convert (Date, SaleDate)
from SQLPortfolio.dbo.NashvilleHousing

Update NashvilleHousing
SET SaleDate = Convert (Date, SaleDate)

 --------------------------------------------------------------------------------------------------------------------------

-- Populate Property Address Data

select PropertyAddress
from SQLPortfolio.dbo.NashvilleHousing
where PropertyAddress is null

select a.ParcelID, a.PropertyAddress, b.parcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
from SQLPortfolio.dbo.NashvilleHousing a
Join SQLPortfolio.dbo.NashvilleHousing b
On a.ParcelID = b.ParcelID
and a.UniqueID <> b.UniqueID
where a.PropertyAddress is Null

Update a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
from SQLPortfolio.dbo.NashvilleHousing a
Join SQLPortfolio.dbo.NashvilleHousing b
On a.ParcelID = b.ParcelID
and a.UniqueID <> b.UniqueID
where a.PropertyAddress is Null


--------------------------------------------------------------------------------------------------------------------------

-- Breaking out PropertyAddress into Individual Columns (Address, State)


select OwnerAddress
from SQLPortfolio.dbo.NashvilleHousing


select 
substring (PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1) as Address,
substring (PropertyAddress, CHARINDEX(',', PropertyAddress) +1, Len(PropertyAddress)) as City
from SQLPortfolio.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
Add StreetAddress Nvarchar (300);

Update NashvilleHousing
SET StreetAddress = substring (PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)

ALTER TABLE NashvilleHousing
Add City Nvarchar (300);

Update NashvilleHousing
SET City  = substring (PropertyAddress, CHARINDEX(',', PropertyAddress) +1, Len(PropertyAddress))



--------- Breaking out PropertyAddress into Individual Columns (Address, State)
Select
PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
from SQLPortfolio.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
Add OwnerStreetAddress Nvarchar (300);

Update NashvilleHousing
SET OwnerStreetAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)

ALTER TABLE NashvilleHousing
Add OwnerState Nvarchar (300);

Update NashvilleHousing
SET OwnerState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)

ALTER TABLE NashvilleHousing
Add OwnerCity Nvarchar (300);

Update NashvilleHousing
SET OwnerCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)


--------------------------------------------------------------------------------------------------------------------------


-- Change 0 and 1 to Yes and No in "Sold as Vacant" field


Select Distinct (SoldAsVacant)
From SQLPortfolio.dbo.NashvilleHousing

Select SoldAsVacant,
CASE
When SoldAsVacant = '0' Then 'No'
When SoldAsVacant = '1' Then 'Yes'
END
From SQLPortfolio.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
ALTER COLUMN SoldAsVacant Nvarchar (300)

Update NashvilleHousing
SET SoldAsVacant = CASE When SoldAsVacant = '0' Then 'No'
When SoldAsVacant = '1' Then 'Yes'
END

-----------------------------------------------------------------------------------------------------------------------------------------------------------

-- Remove Duplicates



WITH ROwNumCTE AS(
Select*,
ROW_NUMBER() OVER (
PARTITION BY ParcelID,
PropertyAddress,
SalePrice,
SaleDate,
LegalReference
ORDER BY UniqueID) as row_num


From SQLPortfolio.dbo.NashvilleHousing)

Delete
From ROwNumCTE
where row_num > 1

---------------------------------------------------------------------------------------------------------
